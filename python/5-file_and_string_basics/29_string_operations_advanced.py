# 29_string_operations_advanced.py
# 문자열 조작 (슬라이싱, 역순, 입력, 반복 등) 종합 예제
# 이 파일은 24~28번 예제를 한 곳에서 실행/비교할 수 있게 통합한 버전입니다.

# ------------------------------------------------------------
# 1) 문자열에서 짝수 인덱스 문자 추출
# ------------------------------------------------------------
txt = 'aAbBcCdDeEfFgGhHiIjJkK'
ret = txt[::2]  # step=2 → 짝수 인덱스만 선택
print('[1] 짝수 인덱스 문자 추출:', ret)  # ‘abcdefghijk’

# ------------------------------------------------------------
# 2) 문자열 뒤집기 (슬라이싱 방식)
# ------------------------------------------------------------
txt = 'abcdefghijk'
ret = txt[::-1]  # 역순 슬라이싱
print('[2] 슬라이싱으로 뒤집기:', ret)  # ‘kjihgfedcba’

# ------------------------------------------------------------
# 3) 문자열 뒤집기 (for 루프 방식)
# ------------------------------------------------------------
txt = 'abcdefghijk'
ret = ''
for i in range(len(txt)):
    ret += txt[-(i + 1)]  # 끝에서부터 하나씩 추가
print('[3] 루프로 뒤집기:', ret)  # ‘kjihgfedcba’

# ------------------------------------------------------------
# 4) 입력받은 파일명에 확장자(.jpg) 자동 추가
# ------------------------------------------------------------
# 주의: 아래 코드는 실행 시 콘솔 입력이 필요합니다.
# 자동 테스트 환경이라면 input()을 주석 처리하거나 기본값을 사용하세요.
try:
    filename = input('\n[4] 저장할 파일 이름을 입력하세요: ')
except EOFError:
    # 입력이 불가능한 환경 대비 기본값
    filename = 'default_image'

filename = filename + '.jpg'
display_msg = f'당신이 저장한 파일은 <{filename}> 입니다.'
print(display_msg)

# ------------------------------------------------------------
# 5) 문자열 결합 및 반복 출력
# ------------------------------------------------------------
msg1 = '여러분'
msg2 = '파이팅!'
display_msg = msg1 + ', ' + msg2 * 3 + '~!'
print('[5] 문자열 반복/결합:', display_msg)
